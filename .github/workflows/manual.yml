# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: [push]
  #workflow_dispatch:
  #  # Inputs the workflow accepts.
  #  inputs:
  #    name:
  #      # Friendly description to be shown in the UI instead of 'name'
  #      description: 'Person to greet'
  #      # Default value if no value is explicitly provided
  #      default: 'World'
  #      # Input has to be provided for the workflow to run
  #      required: true
  #      # The data type of the input
  #      type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  pvs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: List files in the repository
        run: |
          # sudo apt update
          # sudo apt install curl -y
          echo "Hello ${{ inputs.name }}" 
          PVS_CORE_VER_LATEST=$(curl -s "https://search.maven.org/solrsearch/select?q=g:com.pvsstudio%20AND%20a:pvsstudio-maven-plugin&core=gav&rows=1&wt=json" | jq -r '.response.docs[0].v')
          echo "PVS_CORE_VER_LATEST = $PVS_CORE_VER_LATEST"
          PVS_CORE_VER_NOW=`wget -qO- https://api.github.com/repos/readonlyuser1/pvs/releases/latest | grep tag_name | cut -d '"' -f 4`
          echo "PVS_CORE_VER_NOW = $PVS_CORE_VER_NOW"
          
          if [ "$PVS_CORE_VER_NOW" != "$PVS_CORE_VER_LATEST" ]; then
            echo " found new PVS_CORE_VER = $PVS_CORE_VER_LATEST"
            FILE_URL="https://files.pvs-studio.com/java/pvsstudio-cores/$PVS_CORE_VER_LATEST.zip"
            echo "FILE_URL = $FILE_URL"
            wget "$FILE_URL"
            
            RESPONSE=$(curl --header "Authorization: token $GITHUB_TOKEN" --header 'Content-Type: application/json' --data '{"tag_name": "'"$PVS_CORE_VER_LATEST"'","name":"Release '"$PVS_CORE_VER_LATEST"'","body":"Automatic release"}' --request POST https://api.github.com/repos/readonlyuser1/pvs/releases)
            echo "RESPONSE = $RESPONSE"
            RELEASE_ID=$(echo $RESPONSE | jq '.id')  
            echo "RELEASE_ID = $RELEASE_ID"
            
            curl --header "Authorization: token $GITHUB_TOKEN" --header 'Content-Type: application/zip' --data-binary @"$PVS_CORE_VER_LATEST.zip" --request POST https://uploads.github.com/repos/readonlyuser1/pvs/releases/$RELEASE_ID/assets?name=$PVS_CORE_VER_LATEST
            echo "New release created"
          
          
          
          
          
          
          
          
          
